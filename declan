import pgzrun
import random
HEIGHT = 500
WIDTH = 500

CENTRE_X = WIDTH/2
CENTRE_Y = HEIGHT/2
CENTRE = (CENTRE_X, CENTRE_Y)


FINAL_LEVEL = 6
START_SPEED = 18

ITEMS  =  ["bottle","battery","bag","chips"]
game_over = False
game_complete = False
current_level = 1

items = []
animations = []

#function to make the pngs
def draw():
    global items, current_level, game_over,game_complete
    screen.clear()
    screen.blit('bground',(0,0))

    if game_over:
        display_message('GAME OVER',  'TRY AGAIN')
    elif game_complete:
        display_message("YOU WON","congratulations")
    else:
        for item in items:
          item.draw() 
    
#update the screen
def update():
  global items
  if len(items) == 0:
    items = make_items(current_level)
   
#makes other items
def make_items(number_of_extra_items):
  items_to_create = get_option_to_create(number_of_extra_items)
  new_items = create_items(items_to_create)
  layout_items(new_items)
  animate_items(new_items)
  

#decides how many extra items to make
def get_option_to_create(number_of_extra_items):
  items_to_create = ["paper_bag"]
  for i in range(0,number_of_extra_items):
    random_option = random.choice(ITEMS)
    items_to_create.append(random_option)
  return items_to_create 
    
#creates all items
def create_items(items_to_create):
  new_items  = []
  for pic in items_to_create:
    item = Actor(pic + "img")
    new_items.append(item)
  return new_items
 
# func. to arrange items & set equal gap b/w all the items & the screen
def layout_items(items_to_layout):
  num_of_gaps = len(items_to_layout)+1
  gap_size = WIDTH/num_of_gaps
  random.shuffle(items_to_layout)
  for index,item in enumerate(items_to_layout):
    new_x_pos  = (index + 1) * gap_size
    item.x = new_x_pos
 
#makes items fall
def animate_items(items_to_animate):
  global animations
  for item in items_to_animate:
    duration = START_SPEED - current_level
    item.anchor = ('center','bottom')
    animation = animate(item,duration = duration,on_finished = handle_game_over,y = HEIGHT)
    animations.append(animation)



    
    

#decides when to use game over text
def handle_game_over():
  pass

#lets you click the items
def on_mouse_down(pos):
  pass

#decides when to use game complete text
def handle_game_complete():
  pass

#stops makeing the items fall
def stop_animations(animations_to_stop):
  pass

#makes the game complete text
def display_message(heading_text,sub_heading_text):
  pass

pgzrun.go()
